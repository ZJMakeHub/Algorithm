//
//  ZJB-Tree.m
//  02-BinaryTreeOC
//
//  Created by zj on 2020/12/1.
//

#import "ZJB-Tree.h"

@implementation ZJB_Tree

@end



/**
 * 节点元素个数x
 *
 * 根节点： 1 <= x <= m-1
 * 非根节点：ceiling[m/2] - 1 <= x <= m-1
 *
 * ****************************
 *
 * 元素个数与子节点个数相差1的关系
 *
 * 二叉搜索树的多代节点合并获得一个超级节点。
 *
 * 搜索：
 * 从节点内部先找，再去子树中找。
 *
 * 添加：
 * 考虑溢出情况，
 * 上溢解决：将上溢节点与父节点结合，子节点分成两个子节点。
 *
 * 删除：
 * 找到前驱/后继覆盖掉要删除的元素。真正删除元素都是发生在叶子结点当中。
 * 下溢解决：向临近的ceiling[m/2]节点借一个。旋转方式去借。
 *
 * 让B树长高的唯一方式就是根节点向上溢出。
 *
 *
 *
 */







